@page "{id:int}"
@model CoreEstate.Pages.ToRent.DetailsModel
@using CoreEstate.Models

@{
    ViewData["Title"] = Model.ToRentProperty.Name + " To Rent";
}

<h1>@ViewData["Title"]</h1>
<hr />

<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ToRentProperty.Rent)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ToRentProperty.Rent)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ToRentProperty.Despoit)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ToRentProperty.Despoit)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ToRentProperty.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ToRentProperty.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ToRentProperty.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ToRentProperty.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ToRentProperty.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ToRentProperty.Description)
        </dd>
    </dl>
</div>

@if (User.Identity != null && User.Identity.IsAuthenticated)
{
    @if (User.IsInRole(RoleName.IsPropertyManager))
    {
        <div>
            <a asp-page="./Viewings" asp-route-id="@Model.ToRentProperty.Id">Viewings</a>
        </div>
    }
    else
    {
        <div>
            <a asp-page="./Request" asp-route-id="@Model.ToRentProperty.Id">Request Viewing</a>
        </div>
    }
}

<div>
    <a asp-page="./Index">Back to List</a>
</div>
